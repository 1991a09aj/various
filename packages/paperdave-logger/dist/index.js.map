{
  "version": 3,
  "sources": ["../src/index.ts", "../src/ansi.ts"],
  "sourcesContent": ["import path from 'node:path';\nimport wrapAnsi from 'wrap-ansi';\nimport { inspect } from 'node:util';\nimport { ansi, colorize } from './ansi';\n\nlet showDebug = typeof process !== 'undefined' && !!process.env.DEBUG;\n\nconst PREFIX_LENGTH = 6;\n\nconst wrapOptions = {\n  trim: false,\n  hard: true,\n};\n\nconst write =\n  typeof Bun !== 'undefined'\n    ? (data: string) => Bun.write(Bun.stdout, data)\n    : (data: string) => (process as any).stdout.write(data);\n\nfunction writeLine(data: string) {\n  write(data + '\\n');\n}\n\nfunction stringify(...data: any[]) {\n  return data.map(obj => (typeof obj === 'string' ? obj : inspect(obj, false, 4, true))).join(' ');\n}\n\nfunction logPrefixed(prefix: string, content: string) {\n  if (content === '') {\n    write('\\n');\n    return;\n  }\n\n  const wrapped = wrapAnsi(content, 90 - 6, wrapOptions) //\n    .replace(/\\n\\s*/g, '\\n' + ' '.repeat(PREFIX_LENGTH));\n\n  write(prefix + wrapped + '\\n');\n}\n\nexport interface PrintableError extends Error {\n  description: string;\n  hideStack?: boolean;\n  hideName?: boolean;\n}\n\ninterface Logger {\n  info(...data: any[]): void;\n  warn(...data: any[]): void;\n  error(error: Error | PrintableError): void;\n  error(...data: any[]): void;\n  debug(...data: any[]): void;\n  success(...data: any[]): void;\n\n  writeRaw(data: string): void;\n  writeRawLine(data: string): void;\n\n  setShowDebug(showDebug: boolean): void;\n}\n\nfunction formatStackTrace(err: Error) {\n  if (!err.stack) {\n    return '';\n  }\n  const v8firstLine = `${err.name}${err.message ? ': ' + err.message : ''}\\n`;\n  const parsed = err.stack.startsWith(v8firstLine)\n    ? err.stack\n        .slice(v8firstLine.length)\n        .split('\\n')\n        .map(line => {\n          const match = /at (.*) \\((.*):(\\d+):(\\d+)\\)/.exec(line);\n          if (!match) {\n            return { method: '<unknown>', file: null, line: null, column: null };\n          }\n          return {\n            method: match[1],\n            file: match[2],\n            line: parseInt(match[3], 10),\n            column: parseInt(match[4], 10),\n            native: line.includes('[native code]'),\n          };\n        })\n    : err.stack.split('\\n').map(line => {\n        const at = line.indexOf('@');\n        const method = line.slice(0, at);\n        const file = line.slice(at + 1);\n        const fileSplit = /^(.*?):(\\d+):(\\d+)$/.exec(file);\n        return {\n          method: (['module code'].includes(method) ? '' : method) || '',\n          file: fileSplit ? fileSplit[1] : null,\n          line: fileSplit ? parseInt(fileSplit[2], 10) : null,\n          column: fileSplit ? parseInt(fileSplit[3], 10) : null,\n          native: file === '[native code]',\n        };\n      });\n\n  const firstNative = parsed.reverse().findIndex(line => !line.native);\n  if (firstNative !== -1) {\n    // remove the first native lines\n    parsed.splice(0, firstNative, {\n      native: true,\n      method: '',\n      column: null,\n      line: null,\n      file: null,\n    });\n  }\n  parsed.reverse();\n\n  return parsed\n    .map(({ method, file, line, column, native }) => {\n      const source = native\n        ? `[native code]`\n        : file\n        ? [\n            ansi.cyan,\n            path.dirname(file),\n            path.sep,\n            ansi.greenBright,\n            path.basename(file),\n            ansi.reset,\n            ansi.blackBright,\n            ':',\n            ansi.reset,\n            ansi.yellowBright,\n            line,\n            ansi.reset,\n            ansi.blackBright,\n            ':',\n            ansi.redBright,\n            column,\n          ].join('')\n        : '<unknown>';\n\n      return `\\u200b  ${ansi.blackBright}at ${method === '' ? '' : `${method} `}${source}`;\n    })\n    .join('\\n');\n}\n\nfunction formatErrorObj(err: Error | PrintableError) {\n  const { name, message, description, hideStack, hideName, stack } = err as PrintableError;\n\n  return [\n    ansi.redBright,\n    hideName ? '' : (name ?? 'Error') + ': ',\n    message ?? 'Unknown error',\n    ansi.reset,\n    description ? '\\n' + wrapAnsi(description, 90 - 6, wrapOptions) : '',\n    hideStack || !stack ? '' : '\\n' + formatStackTrace(err),\n    description || (!hideStack && stack) ? '\\n' : '',\n  ].join('');\n}\n\nexport const log: Logger = {\n  info: (...data: any[]) =>\n    logPrefixed(`${ansi.blueBright}${ansi.bold}info  ${ansi.reset}`, stringify(...data)),\n  warn: (...data: any[]) =>\n    logPrefixed(\n      `${ansi.yellowBright}${ansi.bold}warn  ${ansi.reset}`,\n      colorize(ansi.yellowBright, stringify(...data))\n    ),\n  error(...data: any[]) {\n    logPrefixed(\n      `${ansi.redBright}${ansi.bold}error ${ansi.reset}`,\n      data.length === 1 && data[0] instanceof Error\n        ? formatErrorObj(data[0])\n        : colorize(ansi.redBright, stringify(...data))\n    );\n  },\n  debug(...data: any[]) {\n    if (showDebug) {\n      logPrefixed(`${ansi.cyanBright}${ansi.bold}debug ${ansi.reset}`, stringify(...data));\n    }\n  },\n  success(...data: any[]) {\n    const str = stringify(...data);\n    if (str === '') {\n      write('\\n');\n    } else {\n      write(wrapAnsi(colorize(ansi.green + ansi.bold, '\u2714 ' + str), 90, wrapOptions) + '\\n');\n    }\n  },\n  writeRaw: write,\n  writeRawLine: writeLine,\n  setShowDebug(show: boolean) {\n    showDebug = show;\n  },\n};\n\n/**\n * When this error is passed to `log.error`, it will be printed with a custom long-description. This\n * is useful to give users a better description on what the error actually is. Does not show a stack\n * trace by default.\n *\n * ```ts\n * new CLIError(\n *   'Invalid config file',\n *   `Please check your config file at ${chalk.cyan(config)} and try again.`\n * );\n * ```\n */\nexport class CLIError extends Error implements PrintableError {\n  constructor(public message: string, public description: string) {\n    super(message);\n    this.name = 'CLIError';\n  }\n\n  get hideStack() {\n    return true;\n  }\n\n  get hideName() {\n    return true;\n  }\n}\n\nexport function injectLogger(obj = console) {\n  // obj.\n}\n", "import supportsColor from 'supports-color';\n\nexport const ansi = {\n  bold: '\\x1b[1m',\n  dim: '\\x1b[2m',\n  underlined: '\\x1b[4m',\n  blink: '\\x1b[5m',\n  reverse: '\\x1b[7m',\n  hidden: '\\x1b[8m',\n  \n  reset: '\\x1b[0m',\n  resetBold: '\\x1b[21m',\n  resetDim: '\\x1b[22m',\n  resetUnderlined: '\\x1b[24m',\n  resetBlink: '\\x1b[25m',\n  resetReverse: '\\x1b[27m',\n  resetHidden: '\\x1b[28m',\n\n  black: '\\x1b[30m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m',\n  white: '\\x1b[37m',\n  bgBlack: '\\x1b[40m',\n  bgRed: '\\x1b[41m',\n  bgGreen: '\\x1b[42m',\n  bgYellow: '\\x1b[43m',\n  bgBlue: '\\x1b[44m',\n  bgMagenta: '\\x1b[45m',\n  bgCyan: '\\x1b[46m',\n  bgWhite: '\\x1b[47m',\n  blackBright: '\\x1b[90m',\n  redBright: '\\x1b[91m',\n  greenBright: '\\x1b[92m',\n  yellowBright: '\\x1b[93m',\n  blueBright: '\\x1b[94m',\n  magentaBright: '\\x1b[95m',\n  cyanBright: '\\x1b[96m',\n  whiteBright: '\\x1b[97m',\n  bgBlackBright: '\\x1b[100m',\n  bgRedBright: '\\x1b[101m',\n  bgGreenBright: '\\x1b[102m',\n  bgYellowBright: '\\x1b[103m',\n  bgBlueBright: '\\x1b[104m',\n  bgMagentaBright: '\\x1b[105m',\n  bgCyanBright: '\\x1b[106m',\n  bgWhiteBright: '\\x1b[107m',\n};\n\nif (!supportsColor.stdout) {\n  Object.keys(ansi).forEach(key => {\n    ansi[key as keyof typeof ansi] = '';\n  });\n}\n\nexport function colorize(color: string, str: string) {\n  return color + str.replaceAll(ansi.reset, ansi.reset + color) + ansi.reset;\n}"],
  "mappings": "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",
  "names": []
}
